#!/bin/sh

# The GPLv2 License
#
#   Copyright (C) 2024  pyamsoft
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along
#   with this program; if not, write to the Free Software Foundation, Inc.,
#   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# adjust-pci-latency
# by: pyamsoft <developer(dot)pyamsoft(at)gmail(dot)com>

NAME="$(basename "$0")"
VERSION="0.0.1"

# Taken from, with modification
# https://github.com/CachyOS/CachyOS-Settings/blob/master/usr/bin/pci-latency
#
# Also see here
# https://wiki.archlinux.org/title/Gaming#Improve_PCI_Express_Latencies
# https://wiki.archlinux.org/title/Professional_audio#System_configuration

# This script is designed to improve the performance and reduce audio latency
# for sound cards by setting the PCI latency timer to an optimal value of 80
# cycles. It also resets the default value of the latency timer for other PCI
# devices, which can help prevent devices with high default latency timers from
# causing gaps in sound.

_tweak_pci_gaming() {
  printf -- 'Gaming: Tweaking system PCI latency...\n'

  # Reset the latency timer for all PCI devices
  printf -- '\n[Baseline]: Adjust all PCI latency to 20.\n'
  setpci -v -s '*:*' latency_timer=20 || {
    printf -- 'Failed resetting latency timer to 20 for all PCI\n'
    return 1
  }

  printf -- '\n[Bus]: Adjust all bus 0 device PCI latency to 0.\n'
  setpci -v -s '0:0' latency_timer=0 || {
    printf -- 'Failed resetting latency timer to 0 for all bus 0 devices\n'
    return 1
  }

  # Set latency timer for all sound cards
  printf -- '\n[Audio]: Adjust all sound device PCI latency to 80\n'
  setpci -v -d "*:*:04xx" latency_timer=80 || {
    printf -- 'Failed adjusting latency timer to 80 for all sound devices\n'
    return 1
  }

  printf -- '\nGaming: PCI latency times adjusted!\n'
  return 0
}

_tweak_pci_audio() {
  printf -- 'Pro-Audio: Tweaking system PCI latency...\n'

  # Reset the latency timer for all PCI devices
  printf -- '\n[Baseline]: Adjust all PCI latency to b0.\n'
  setpci -v -d '*:*' latency_timer=b0 || {
    printf -- 'Failed resetting latency timer to b0 for all PCI\n'
    return 1
  }

  printf -- '\n[Audio]: Adjust all sound device PCI latency to ff\n'
  setpci -v -d "*:*:04xx" latency_timer=ff || {
    printf -- 'Failed adjusting latency timer to ff for all sound devices\n'
    return 1
  }

  printf -- '\nPro-Audio: PCI latency times adjusted!\n'

  return 0
}

_usage() {
  printf -- '%s\n' "$(cat <<EOF
${NAME} ${VERSION}

usage: ${NAME} <mode>

where <mode> is one of:

game
games
gaming        Adjust system PCI latency for lower latency at the cost
              of system overall throughput.

audio
proaudio
pro-audio     Adjust system PCI latency to maximize the PCI latency timer
              of PCI sound card devices for audio production.

EOF
)"
}

##
# Return codes
# 0: success
# 1: root priv needed
# 2: setpci missing
# 3: invalid command
# 4: action failed
main() {
  if ! command -v setpci >/dev/null; then
    printf -- 'You must have "setpci"\n'
    return 2
  fi

  case "$1" in
    game|games|gaming)
      # Check if the script is run with root privileges
      if [ "$(id -u)" -ne 0 ]; then
        printf -- 'Error: This script must be run with root privileges.\n'
        return 1
      fi

      _tweak_pci_gaming || {
        printf -- 'Failed to adjust PCI latency for gaming.\n'
        return 4
      }
      ;;
    audio|proaudio|pro-audio)
      # Check if the script is run with root privileges
      if [ "$(id -u)" -ne 0 ]; then
        printf -- 'Error: This script must be run with root privileges.\n'
        return 1
      fi

      _tweak_pci_audio || {
        printf -- 'Failed to adjust PCI latency for pro-audio.\n'
        return 4
      }
      ;;
    *)
      _usage || return 3
      return 3
      ;;
  esac

  return 0
}

main "$@" || exit 1
exit 0
